{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","_ref","toDo","done","react_default","a","createElement","className","SearchPanel","state","term","onSearchChange","e","target","value","_this","setState","props","type","placeholder","this","onChange","Component","TodoListItem","_this$props","label","onDeleted","onToggleImportant","onToggleDone","classNames","important","onClick","TodoList","todos","elements","map","item","id","itemProps","Object","objectWithoutProperties","key","components_todo_list_item","assign","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","concat","ItemAddForm","onLabelChange","onSubmit","preventDefault","onAdded","App","maxId","todoData","createTodoItem","deleteItem","toConsumableArray","slice","currentId","addItem","_ref2","newItem","_ref3","toggleProperty","_ref4","findIndex","el","arr","propName","index","oldItem","objectSpread","defineProperty","items","length","indexOf","_this$state","visibleItems","search","doneCount","todoCount","components_app_header","components_search_panel","components_item_status_filter","components_todo_list","components_item_add_form","ReactDOM","render","components_app","document","getElementById"],"mappings":"iXAEeA,SCEG,SAAAC,GAAkB,IAAhBC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,KACtB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,UAAKJ,EAAL,gBAAwBC,EAAxB,YCNGK,oNCIXC,MAAQ,CACJC,KAAM,MAGVC,eAAiB,SAACC,GACd,IAAMF,EAAOE,EAAEC,OAAOC,MACtBC,EAAKC,SAAS,CAAEN,SAChBK,EAAKE,MAAMN,eAAeD,4EAI1B,OACIN,EAAAC,EAAAC,cAAA,SAAOY,KAAK,OACLX,UAAU,4BACVY,YAAY,iBACZL,MAAQM,KAAKX,MAAMC,KACnBW,SAAWD,KAAKT,wBAlBMW,sBCF1BC,0LCIF,IAAAC,EAQPJ,KAAKH,MANRQ,EAFUD,EAEVC,MACAC,EAHUF,EAGVE,UACAC,EAJUH,EAIVG,kBACAC,EALUJ,EAKVI,aAKGC,EAAa,iBASX,OAnBKL,EAMVrB,OAMA0B,GAAc,SAZJL,EAOVM,YASAD,GAAc,cAILzB,EAAAC,EAAAC,cAAA,QAAMC,UAAYsB,GACdzB,EAAAC,EAAAC,cAAA,QACIC,UAAU,uBACzBwB,QAAUH,GACRH,GAGHrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACdH,EAAAC,EAAAC,cAAA,UAAQY,KAAK,SACXX,UAAU,6CACVwB,QAAUJ,GACXvB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAGdH,EAAAC,EAAAC,cAAA,UAAQY,KAAK,SACXX,UAAU,4CACVwB,QAAUL,GACXtB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,4BAvCuBe,cCF3BU,SCGE,SAAA/B,GAA2D,IAAxDgC,EAAwDhC,EAAxDgC,MAAOP,EAAiDzB,EAAjDyB,UAAWC,EAAsC1B,EAAtC0B,kBAAmBC,EAAmB3B,EAAnB2B,aAE/CM,EAAWD,EAAME,IAAI,SAACC,GAAS,IACzBC,EAAqBD,EAArBC,GAAOC,EADkBC,OAAAC,EAAA,EAAAD,CACJH,EADI,QAGjC,OACIhC,EAAAC,EAAAC,cAAA,MAAImC,IAAKJ,EAAI9B,UAAU,mBACnBH,EAAAC,EAAAC,cAACoC,EAADH,OAAAI,OAAA,GACSL,EADT,CAEIZ,UAAY,kBAAMA,EAAUW,IAC5BV,kBAAoB,kBAAMA,EAAkBU,IAC5CT,aAAe,kBAAMA,EAAaS,UAKlD,OACIjC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wBACR2B,KCrBCU,oNCIXC,QAAU,CACN,CAAEC,KAAM,MAAOrB,MAAO,OACtB,CAAEqB,KAAM,SAAUrB,MAAO,UACzB,CAAEqB,KAAM,OAAQrB,MAAO,iFAGlB,IAAAD,EAE8BJ,KAAKH,MAAhC8B,EAFHvB,EAEGuB,OAAQC,EAFXxB,EAEWwB,eAEVH,EAAUzB,KAAKyB,QAAQV,IAAI,SAAAlC,GAAqB,IAAlB6C,EAAkB7C,EAAlB6C,KAAMrB,EAAYxB,EAAZwB,MAGhCwB,EAFWF,IAAWD,EAEH,WAAa,wBAEtC,OACI1C,EAAAC,EAAAC,cAAA,UAAQY,KAAK,SACLX,UAAS,OAAA2C,OAAUD,GACnBR,IAAMK,EACNf,QAAU,kBAAMiB,EAAeF,KACjCrB,KAKd,OACIrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACTsC,UA7B4BvB,cCF/B6B,oNCIX1C,MAAQ,CACJgB,MAAO,MAGX2B,cAAgB,SAACxC,GACbG,EAAKC,SAAS,CACVS,MAAOb,EAAEC,OAAOC,WAIxBuC,SAAW,SAACzC,GACRA,EAAE0C,iBACEvC,EAAKN,MAAMgB,QACXV,EAAKE,MAAMsC,QAAQxC,EAAKN,MAAMgB,OAC9BV,EAAKN,MAAMgB,MAAQ,6EAMvB,OACIrB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBACV8C,SAAUjC,KAAKiC,UACjBjD,EAAAC,EAAAC,cAAA,SAAOY,KAAK,OACLX,UAAU,eACVc,SAAUD,KAAKgC,cACfjC,YAAY,wBACZL,MAAOM,KAAKX,MAAMgB,QACzBrB,EAAAC,EAAAC,cAAA,UAAQY,KAAK,SACLX,UAAU,6BADlB,oBA9ByBe,cCF1BkC,oNCUXC,MAAQ,IAKRhD,MAAQ,CACJiD,SAAU,CACN3C,EAAK4C,eAAe,gBACpB5C,EAAK4C,eAAe,qBACpB5C,EAAK4C,eAAe,iBAExBjD,KAAM,GACNqC,OAAQ,SAYZa,WAAa,SAACvB,GACVtB,EAAKC,SAAS,SAAAf,GAAkB,IAAfyD,EAAezD,EAAfyD,SAOb,MAAO,CACHA,SANUnB,OAAAsB,EAAA,EAAAtB,CACPmB,EAASI,MAAM,EAAG/C,EAAKgD,UAAU1B,KAD1Ba,OAAAX,OAAAsB,EAAA,EAAAtB,CAEPmB,EAASI,MAAM/C,EAAKgD,UAAU1B,GAAM,WASnD2B,QAAU,SAACvC,GACPV,EAAKC,SAAS,SAAAiD,GAAkB,IAAfP,EAAeO,EAAfP,SACPQ,EAAUnD,EAAK4C,eAAelC,GAKpC,MAAO,CACHiC,SALUnB,OAAAsB,EAAA,EAAAtB,CACPmB,GADOR,OAAA,CAEVgB,UAwBZtC,aAAe,SAACS,GACZtB,EAAKC,SAAS,SAAAmD,GAAkB,IAAfT,EAAeS,EAAfT,SACb,OAAO3C,EAAKqD,eAAeV,EAAUrB,EAAI,aAIjDV,kBAAoB,SAACU,GACjBtB,EAAKC,SAAS,SAAAqD,GAAkB,IAAfX,EAAeW,EAAfX,SACb,OAAO3C,EAAKqD,eAAeV,EAAUrB,EAAI,kBAcjD1B,eAAiB,SAACD,GACdK,EAAKC,SAAS,CAAEN,YAGpBsC,eAAiB,SAACD,GACdhC,EAAKC,SAAS,CAAE+B,qFA7FVV,GACN,OAAOjB,KAAKX,MAAMiD,SAASY,UAAU,SAACC,GAAD,OAAQA,EAAGlC,KAAOA,2CAa5CZ,GACX,MAAO,CACHA,QACAtB,MAAM,EACN2B,WAAW,EACXO,GAAIjB,KAAKqC,gDA+BFe,EAAKnC,EAAIoC,GACpB,IAAMC,EAAQtD,KAAK2C,UAAU1B,GAEvBsC,EAAUH,EAAIE,GACdR,EAAO3B,OAAAqC,EAAA,EAAArC,CAAA,GAAQoC,EAARpC,OAAAsC,EAAA,EAAAtC,CAAA,GAAkBkC,GAAYE,EAAQF,KAOnD,MAAO,CACHf,SANUnB,OAAAsB,EAAA,EAAAtB,CACPiC,EAAIV,MAAM,EAAGY,IADNxB,OAAA,CAEVgB,GAFU3B,OAAAsB,EAAA,EAAAtB,CAGPiC,EAAIV,MAAMY,EAAQ,qCAmBtBI,EAAOpE,GACV,OAAmB,GAAfA,EAAKqE,OACED,EAGJA,EAAM/B,OAAO,SAACX,GACjB,OAAqC,IAA9BA,EAAKX,MAAMuD,QAAQtE,oCAY3BoE,EAAO/B,GACV,OAAOA,GACH,IAAK,MACD,OAAO+B,EACX,IAAK,SACD,OAAOA,EAAM/B,OAAO,SAACX,GAAD,OAAWA,EAAKjC,OACxC,IAAK,OACD,OAAO2E,EAAM/B,OAAO,SAACX,GAAD,OAAUA,EAAKjC,OACvC,QACI,OAAO2E,oCAIV,IAAAG,EAE8B7D,KAAKX,MAAhCiD,EAFHuB,EAEGvB,SAAUhD,EAFbuE,EAEavE,KAAMqC,EAFnBkC,EAEmBlC,OAElBmC,EAAe9D,KAAK2B,OAAO3B,KAAK+D,OAAOzB,EAAUhD,GAAOqC,GAExDqC,EAAY1B,EAASX,OAAO,SAACwB,GAAD,OAAQA,EAAGpE,OAAM4E,OAE7CM,EAAY3B,EAASqB,OAASK,EAEpC,OACIhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAACgF,EAAD,CAAWpF,KAAOmF,EAAYlF,KAAOiF,IACrChF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACiF,EAAD,CACI5E,eAAiBS,KAAKT,iBAC1BP,EAAAC,EAAAC,cAACkF,EAAD,CACIzC,OAASA,EACTC,eAAiB5B,KAAK4B,kBAG9B5C,EAAAC,EAAAC,cAACmF,EAAD,CACIxD,MAAQiD,EACRxD,UAAYN,KAAKwC,WACjBhC,aAAeR,KAAKQ,aACpBD,kBAAoBP,KAAKO,oBAE7BvB,EAAAC,EAAAC,cAACoF,EAAD,CACInC,QAAUnC,KAAK4C,kBA5IF1C,cCLjCqE,IAASC,OAAOxF,EAAAC,EAAAC,cAACuF,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.841ff5b6.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\n\r\nexport default AppHeader;","import React from 'react';\r\n\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n    return (\r\n        <div className=\"app-header\">\r\n            <h1>Todo List</h1>\r\n            <h2>{toDo} more to do, {done} done</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppHeader;","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;","import React, { Component } from 'react';\r\n\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n    \r\n    state = {\r\n        term: ''\r\n    };\r\n\r\n    onSearchChange = (e) => {\r\n        const term = e.target.value;\r\n        this.setState({ term });\r\n        this.props.onSearchChange(term);\r\n    };\r\n    \r\n    render() {\r\n        return (\r\n            <input type=\"text\"\r\n                   className=\"form-control search-input\"\r\n                   placeholder=\"Type to search\"\r\n                   value={ this.state.term }\r\n                   onChange={ this.onSearchChange } />\r\n        );\r\n    };\r\n};","import TodoListItem from './todo-list-item';\r\n\r\nexport default TodoListItem;","import React, { Component } from 'react';\r\n\r\nimport './todo-list-item.css';\r\n\r\nexport default class TodoListItem extends Component {\r\n\r\n    render() {\r\n        const { \r\n\t\t\tlabel,\r\n\t\t\tonDeleted,\r\n\t\t\tonToggleImportant,\r\n\t\t\tonToggleDone,\r\n\t\t\tdone,\r\n\t\t\timportant\r\n\t\t} = this.props;\r\n\r\n\t\tlet classNames = 'todo-list-item'\r\n\t\tif (done) {\r\n\t\t\tclassNames += ' done';\r\n\t\t}\r\n\r\n\t\tif (important) {\r\n\t\t\tclassNames += ' important';\r\n\t\t}\r\n\r\n        return (\r\n            <span className={ classNames }>\r\n                <span\r\n                    className=\"todo-list-item-label\"\r\n\t\t\t\t\tonClick={ onToggleDone }>\r\n\t\t\t\t\t{ label }\r\n                </span>\r\n\r\n\t\t\t\t<div className=\"btns\">\r\n\t\t\t\t\t<button type=\"button\"\r\n\t\t\t\t\t\t\tclassName=\"btn btn-outline-success btn-sm float-right\"\r\n\t\t\t\t\t\t\tonClick={ onToggleImportant }>\r\n\t\t\t\t\t\t<i className=\"fa fa-exclamation\" />\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t<button type=\"button\"\r\n\t\t\t\t\t\t\tclassName=\"btn btn-outline-danger btn-sm float-right\"\r\n\t\t\t\t\t\t\tonClick={ onDeleted }>\r\n\t\t\t\t\t\t<i className=\"fa fa-trash-o\" />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n            </span>\r\n        );\r\n    }\r\n}","import TodoList from './todo-list';\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item';\r\nimport './todo-list.css'\r\n\r\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {  \r\n\r\n    const elements = todos.map((item) => {\r\n        const { id, ...itemProps } = item;\r\n        \r\n        return (\r\n            <li key={id} className=\"list-group-item\">\r\n                <TodoListItem\r\n                    { ...itemProps }\r\n                    onDeleted={ () => onDeleted(id) }\r\n                    onToggleImportant={ () => onToggleImportant(id) }\r\n                    onToggleDone={ () => onToggleDone(id) } />\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <ul className=\"list-group todo-list\">\r\n            { elements }\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import ItemStatusFilter from './item-status-filter';\r\n\r\nexport default ItemStatusFilter;","import React, { Component } from 'react';\r\n\r\nimport './item-status-filter.css'\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n    \r\n    buttons = [\r\n        { name: 'all', label: 'All' },\r\n        { name: 'active', label: 'Active' },\r\n        { name: 'done', label: 'Done' }\r\n    ];\r\n\r\n    render() {\r\n\r\n        const { filter, onFilterChange } = this.props;\r\n\r\n        const buttons = this.buttons.map(({ name, label }) => {\r\n            const isActive = filter === name;\r\n\r\n            const clazz = isActive ? 'btn-info' : 'btn-outline-secondary'\r\n\r\n            return (\r\n                <button type=\"button\"\r\n                        className={ `btn ${clazz}` }\r\n                        key={ name }\r\n                        onClick={ () => onFilterChange(name) }>\r\n                    { label }\r\n                </button>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n                { buttons }\r\n            </div>\r\n        );\r\n    }\r\n}","import ItemAddForm from './item-add-form';\r\n\r\nexport default ItemAddForm;","import React, { Component } from 'react';\r\n\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n\r\n    state = {\r\n        label: ''\r\n    };\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value\r\n        });\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.label) {\r\n            this.props.onAdded(this.state.label);\r\n            this.state.label = '';\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <form className=\"item-add-form\"\r\n                  onSubmit={this.onSubmit}>\r\n                <input type=\"text\"\r\n                       className=\"form-control\"\r\n                       onChange={this.onLabelChange}\r\n                       placeholder=\"What needs to be done\"\r\n                       value={this.state.label}/>\r\n                <button type=\"submit\"\r\n                        className=\"btn btn-outline-secondary\">\r\n                    Add Item\r\n                </button>\r\n            </form>\r\n        );\r\n    };\r\n};","import App from './app';\r\n\r\nexport default App;","import React, { Component } from 'react';\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport TodoList from '../todo-list';\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport ItemAddForm from '../item-add-form/';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component  {\r\n\r\n    maxId = 0;\r\n    currentId(id) {\r\n        return this.state.todoData.findIndex((el) => el.id === id);\r\n    };\r\n\r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem('Drink Coffee'),\r\n            this.createTodoItem('Build Awesome App'),\r\n            this.createTodoItem('Have a lunch')\r\n        ],\r\n        term: '',\r\n        filter: 'all'\r\n    };\r\n\r\n    createTodoItem(label) {\r\n        return {\r\n            label,\r\n            done: false,\r\n            important: false,\r\n            id: this.maxId++\r\n        };\r\n    };\r\n\r\n    deleteItem = (id) => {\r\n        this.setState(({ todoData }) => {\r\n\r\n            const newArray = [\r\n                ...todoData.slice(0, this.currentId(id)), \r\n                ...todoData.slice(this.currentId(id) + 1)\r\n            ];\r\n\r\n            return {\r\n                todoData: newArray\r\n            };\r\n        });\r\n    };\r\n\r\n    addItem = (label) => {\r\n        this.setState(({ todoData }) => {\r\n            const newItem = this.createTodoItem(label);\r\n            const newArray = [\r\n                ...todoData,\r\n                newItem\r\n            ];\r\n            return {\r\n                todoData: newArray\r\n            };\r\n        });\r\n    };\r\n\r\n    toggleProperty(arr, id, propName) {\r\n        const index = this.currentId(id);\r\n\r\n        const oldItem = arr[index];\r\n        const newItem = { ...oldItem, [propName]: !oldItem[propName] };\r\n        \r\n        const newArray = [\r\n            ...arr.slice(0, index),\r\n            newItem,\r\n            ...arr.slice(index + 1)\r\n        ];\r\n        return {\r\n            todoData: newArray\r\n        };\r\n    }\r\n\r\n    onToggleDone = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            return this.toggleProperty(todoData, id, 'done');\r\n        });\r\n    };\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            return this.toggleProperty(todoData, id, 'important');\r\n        });\r\n    };\r\n    \r\n    search(items, term) {\r\n        if (term.length == 0) {\r\n            return items;\r\n        }\r\n\r\n        return items.filter((item) => {\r\n            return item.label.indexOf(term) !== -1;\r\n        });\r\n    }\r\n\r\n    onSearchChange = (term) => {\r\n        this.setState({ term });\r\n    };\r\n\r\n    onFilterChange = (filter) => {\r\n        this.setState({ filter });\r\n    };\r\n\r\n    filter(items, filter) {\r\n        switch(filter) {\r\n            case 'all':\r\n                return items;\r\n            case 'active':\r\n                return items.filter((item) => !item.done);\r\n            case 'done':\r\n                return items.filter((item) => item.done);\r\n            default:\r\n                return items;\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { todoData, term, filter } = this.state;\r\n\r\n        const visibleItems = this.filter(this.search(todoData, term), filter);\r\n\r\n        const doneCount = todoData.filter((el) => el.done).length;\r\n\r\n        const todoCount = todoData.length - doneCount;\r\n\r\n        return (\r\n            <div className=\"todo-app\">\r\n                <AppHeader toDo={ todoCount } done={ doneCount } />\r\n                <div className=\"top-panel\">\r\n                    <SearchPanel\r\n                        onSearchChange={ this.onSearchChange }/>\r\n                    <ItemStatusFilter\r\n                        filter={ filter }\r\n                        onFilterChange={ this.onFilterChange }/>\r\n                </div>\r\n                \r\n                <TodoList\r\n                    todos={ visibleItems }\r\n                    onDeleted={ this.deleteItem }\r\n                    onToggleDone={ this.onToggleDone }\r\n                    onToggleImportant={ this.onToggleImportant } />\r\n\r\n                <ItemAddForm\r\n                    onAdded={ this.addItem } />\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}